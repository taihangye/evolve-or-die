<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://taihangye.github.io/evolve-or-die/feed.xml" rel="self" type="application/atom+xml" /><link href="https://taihangye.github.io/evolve-or-die/" rel="alternate" type="text/html" /><updated>2021-06-12T01:47:27-05:00</updated><id>https://taihangye.github.io/evolve-or-die/feed.xml</id><title type="html">Evolve or Die</title><subtitle>Mainly about technology, management, ideas</subtitle><entry><title type="html">How-to: Build a pet detector model in an hour</title><link href="https://taihangye.github.io/evolve-or-die/jupyter/2021/06/12/albus-detector.html" rel="alternate" type="text/html" title="How-to: Build a pet detector model in an hour" /><published>2021-06-12T00:00:00-05:00</published><updated>2021-06-12T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/jupyter/2021/06/12/albus-detector</id><author><name>Taihang Ye</name></author><category term="jupyter" /><summary type="html"></summary></entry><entry><title type="html">Thoughts about the Leadership Pipeline - Overview</title><link href="https://taihangye.github.io/evolve-or-die/markdown/2021/06/06/The-Leadership-Pipelines-overview.html" rel="alternate" type="text/html" title="Thoughts about the Leadership Pipeline - Overview" /><published>2021-06-06T00:00:00-05:00</published><updated>2021-06-06T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/markdown/2021/06/06/The-Leadership-Pipelines-overview</id><author><name></name></author><category term="markdown" /><summary type="html">There are six leadership passages that a leader needs to go through. The book focuses on helping readers become familiar with the skills, time applications, and work values demanded by each passage, as well as this particular leadership gestalt. Passage One: From Managing Self to Managing Others Manageing self: They contribute by doing the assigned work within given time frames and in ways that meet objectives. By sharpening and boardening their individual skills, they make increased contributions and are then considered “promotable” by organizations. From a time application standpoint, the learning involves planning (so that work is completed on time), punctuality, content, quality, and reliability. The work values to be developed include acceptance of the company culture and adopting of professional standards. Managing others: The skills people should learn at this first leadership passage include planning work, filling jobs, assigning work, motivating, coaching, and measuring the work of others.They must shift from “doing” work to getting work done through others. They must believe that making time for others, planning, coaching, and the like are necessary tasks and are their responsibility. More than that, they must view this other-directed work as mission-critical to their sucess. Passage Two: From Managing Others to Managing Managers Perhaps the biggest difference from the previous passage is that here, managers must be pure management. Now they need to divest themselves of individual tasks. The key skills that must be mastered duration this transition include Selecting people to turn Passage One Assigning managerial and leadership work to them Measuring their progress as managers Coaching them Beginning to think beyond their function and concerning themselves with strategic issues that support the overall business One of the touch responsibility of managers of managers is to return people to individual-contributor roles if first-line managers don’t shift their behaviors and values Passage Three: From Managing Managers to Functional Manager Skills: New communication skills with individual contributors Endeavor to understand areas that are outside their own experiences and also learn to value it Team play with other functional managers and competition for resources based on business needs Proficient strategiest, not only for their function but also for blending their functional strategy with the overall business strategy. Time-application: Participating in business team meetings and working with other functional managers Delegating responsibility for overseeing many functional tasks to direct reports Value Long-term strategy, such as state-of-the-art, futuristic thinking for their function, is usually what gives most managers trouble. Passage Four: From Functional Manager to Business Manager Receive significant autonomy In charge of integrating functions From looking at plans and proposals functionally to a profit perspective and to a long-term view Balancing act between future goals and present needs and making trade-offs between the two Passage Five: From Business Manager to Group Manager Similar managing self to managing others, a business manager values the success of his own business while a group manager values the success of other people’s businesses. Evaluating strategy for resource allocation and deployment purposes. Development of business managers Portfolio strategy: Do I have the right collection of businesses? What to add, subtract and change? Avoid wishful thinking and instead taking a hard, objective looking at their range of resources and making a judment based on analysis and experience. Passage Six: From Group Manager to Enterprise Manager Long term visionary thinkers Develop operating mechanisms to know and drive quarter-by-quarter performance that is in tune with longer-term strategy. Well-developed external sensitivity and the ability to manage external constituencies, sense significant external shifts, and do something about them proactively. Let go of the pieces - that is, the individual products and customers - and focus on the whole Assume a team of high-achieving and ambitious direct reports.</summary></entry><entry><title type="html">保持技术敏感度：了解顶层架构</title><link href="https://taihangye.github.io/evolve-or-die/markdown/2021/06/05/%E4%BF%9D%E6%8C%81%E6%8A%80%E6%9C%AF%E6%95%8F%E6%84%9F%E5%BA%A6-%E4%BA%86%E8%A7%A3%E9%A1%B6%E5%B1%82%E6%9E%B6%E6%9E%84.html" rel="alternate" type="text/html" title="保持技术敏感度：了解顶层架构" /><published>2021-06-05T00:00:00-05:00</published><updated>2021-06-05T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/markdown/2021/06/05/%E4%BF%9D%E6%8C%81%E6%8A%80%E6%9C%AF%E6%95%8F%E6%84%9F%E5%BA%A6-%E4%BA%86%E8%A7%A3%E9%A1%B6%E5%B1%82%E6%9E%B6%E6%9E%84</id><author><name></name></author><category term="markdown" /><summary type="html">吃老本 前一篇聊了成为技术管理者后，不免会在技术上有所退步，我们首先要接受这个事实。那接受后是不是就可以安心地吃老本呢，当然不是。在现金这个社会，只需要一两年，甚至更短的时间内技术就会迭代，一年前火热的框架，可能在今年就会被另一套技术或是框架所替代。作为技术管理者，除非你在成为技术管理者前已经有大量的沉淀，对各种技术融汇贯通，否则老本真没几年好吃。 Why/How/What 那既然技术迭代得那么快，而管理者又不可能完全专注于技术上，那么就要着眼于顶层的架构，能够对自己领域内的系统的不同设计回答why, how和what。why其实是最重要的，核心是回答一个系统服务于解决一个什么现实中的问题，就比如消息队列是一种服务间的异步通讯方式，主要解决不需要同步（即时性）的操作的请求和应答。how是回答为了实现这个功能，从meta层面如何设计这个系统，这儿有一个比较好用的判断标准，你能不能在10分钟（甚至5分钟）就把这个系统的设计思路给一个有一定技术背景但没有结束过你的系统的人讲清楚系统是怎么运作的，并谈谈其关键指标，不同设计的优劣与分别适用于怎么样的场景、需求。这儿还是以消息队列来举例，最经典的kafka的模型，producer -&amp;gt; broker/queue -&amp;gt; consumer，一个或多个producer发送消息到broker的某个topic，一个或多个consumer可以订阅broker的topic来获得更新，这就是最基础的how。what注重于细节设计，注重一个系统里每个子系统的设计与实现，了解的深度可以更加因地制宜，但一些关键点还是需要知道的。比如消息队列中broker的persistent策略，consumer如何确保不会漏消系，遇到重复的消息应该怎么处理等等。 Priority 一个技术型公司当技术团队超过50人后一线技术管理者需要更了解how和what，而更高层级的管理者的应该更偏重why和how，放手what。这儿举个WhatsApp的例子，当WhatsApp在被FB收购前还只有10~30人左右的工程师团队时，每个人都非常hands on，也没有什么一线技术管理，只有工程师，一个工程师负责一大块的功能。当被收购后慢慢团队到了50-100人，就开始出现技术管理，这个阶段没有太多的层级，所以每个manager其实也还是输出一定代码的。后期发展到几百人的团队，不同的国家都有团队时，一线manager就不会再输出太多代码了（偶尔会有一些，因人而异），而senior manager及以上更多地就会注重why，how并且challenge手下一些what的问题，来获得二手的信息。</summary></entry><entry><title type="html">保持技术敏感度：书, 论文，线上课程，技术博客与信息流</title><link href="https://taihangye.github.io/evolve-or-die/markdown/2021/06/05/%E4%BF%9D%E6%8C%81%E6%8A%80%E6%9C%AF%E6%95%8F%E6%84%9F%E5%BA%A6-%E4%B9%A6,-%E8%AE%BA%E6%96%87%E4%B8%8E%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%E6%96%B0%E9%97%BB.html" rel="alternate" type="text/html" title="保持技术敏感度：书, 论文，线上课程，技术博客与信息流" /><published>2021-06-05T00:00:00-05:00</published><updated>2021-06-05T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/markdown/2021/06/05/%E4%BF%9D%E6%8C%81%E6%8A%80%E6%9C%AF%E6%95%8F%E6%84%9F%E5%BA%A6:%E4%B9%A6,%20%E8%AE%BA%E6%96%87%E4%B8%8E%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%E6%96%B0%E9%97%BB</id><author><name></name></author><category term="markdown" /><summary type="html">书 书中自有黄金屋。读书是一个系统性学习的过程，在读书的过程中时常要思考Why/How/What，内化到自己的技术储备中。读技术书更多的是要弄懂抽象的概念，触类旁通，而不是记住所有的细节。技术类的书缺点也相对明显，那就是即时性相对会差一些，不能反映当下正在流行的技术，也不能解决具体生产中你面对的问题。 论文 如果想要了解学术界比较前沿的技术研究，看一些论文是一种不错的选择，有一些概述性质的论文，或是经典、引用非常多的论文是一个不错的开始。这对人的技术基础有比较高的要求，我自己其实看得也不是很多，所以也不做过多的评论。 线上课程 这其实是一个非常不错的方式来保持技术敏感度，并真实地写一些代码get hands dirty的方式。我之前在Oracle的老板是VP of Enigeer, 他还上了挺多线上的课程，包括很知名的Andrew Ng的Stanford Machine Learning。我自己也对线上课程比较看好，现在的很多好的课程都比较注重hands on以及保持所用的技术与业界接轨，很多这样的课程都是由大学教授或是业界的大佬们所开设的，价格也都还挺便宜的。比较推荐大家看看fast.ai的课程的，我最近也在看。 技术博客与信息流 可以订阅一些技术博客或者信息流，来科普一些新闻和最新的动向，知道业界不同的公司在用什么样的技术，做什么样的产品等等。这儿很多科技公司有自己的Engineering/Data Blog，是比较好的来源。当然这儿不太推荐每天有事没事就刷，可以一段时间集中半天来浏览，做到更深度和系统化的思考。与此同时开始写一些自己的技术、管理的博客也是一种整理更新自己技术体系的好方法，这儿有两篇比较好的文章是写为什么要写博客的Why you (yes, you) should blog,更好地写博客Advise for better blog posts。</summary></entry><entry><title type="html">保持技术敏感度：接受</title><link href="https://taihangye.github.io/evolve-or-die/markdown/2021/06/05/%E4%BF%9D%E6%8C%81%E6%8A%80%E6%9C%AF%E6%95%8F%E6%84%9F%E5%BA%A6-%E6%8E%A5%E5%8F%97.html" rel="alternate" type="text/html" title="保持技术敏感度：接受" /><published>2021-06-05T00:00:00-05:00</published><updated>2021-06-05T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/markdown/2021/06/05/%E4%BF%9D%E6%8C%81%E6%8A%80%E6%9C%AF%E6%95%8F%E6%84%9F%E5%BA%A6-%E6%8E%A5%E5%8F%97</id><author><name></name></author><category term="markdown" /><summary type="html">之前聊了为什么想要分享这个话题，现在我想聊聊如何接受技术能力下降的问题。 成为管理者，首要任务是让支持好你负责的团队中的每一个人，而不是直接产出结果。这往往是一个是从技术到管理转变的最大障碍，思维和价值观还是停留在我要直接为产品、结果负责，其实你直接负责的是你的团队，间接为团队做出的结果负责。有了思维模式的转变，随之带来的就是技能和时间分配的转变，管理者无法再花费大部分时间在技术细节上，更多的是在大方向上的理解，以及信任团队中技术领袖的决策，获得二手的技术信息。在获得新技能的同时，技术能力敏感度无法避免地会随之下降。 主动承认这个客观事实是保持一定技术敏感度的第一步。你不必技术在团队中是第一的，你也不应该花费大部分时间在技术上，越早认清楚这一点，越早你能更有性价比地去保持技术敏感度。</summary></entry></feed>