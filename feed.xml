<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://taihangye.github.io/evolve-or-die/feed.xml" rel="self" type="application/atom+xml" /><link href="https://taihangye.github.io/evolve-or-die/" rel="alternate" type="text/html" /><updated>2022-04-09T00:22:54-05:00</updated><id>https://taihangye.github.io/evolve-or-die/feed.xml</id><title type="html">Evolve or Die</title><subtitle>Mainly about technology, management, ideas</subtitle><entry><title type="html">The manager’s path - 6</title><link href="https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/04/09/the-manager-path-6.html" rel="alternate" type="text/html" title="The manager’s path - 6" /><published>2022-04-09T00:00:00-05:00</published><updated>2022-04-09T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/04/09/the-manager-path-6</id><author><name></name></author><category term="management" /><category term="leadership" /><category term="reading_notes" /><summary type="html">“Run the project and adjust the plan as you go. The value of a good planning process is that it helps you know approximately how far the project has come, and approximately how far it is from completion. As things slip (and they always do), keep everyone apprised of the status. But now, instead of guessing how far you have to go, you can clearly point to the milestones that have been hit and outline the expected remaining work.”</summary></entry><entry><title type="html">The manager’s path - 5</title><link href="https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/04/08/the-manager-path-5.html" rel="alternate" type="text/html" title="The manager’s path - 5" /><published>2022-04-08T00:00:00-05:00</published><updated>2022-04-08T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/04/08/the-manager-path-5</id><author><name></name></author><category term="management" /><category term="leadership" /><category term="reading_notes" /><summary type="html">“Ultimately, the value of planning isn’t that you execute the plan perfectly, that you catch every detail beforehand, or that you predict the future; it’s that you enforce the self-discipline to think about the project in some depth before diving in and seeing what happens. A degree of forethought, in places where you can reasonably make predictions and plans, is the goal. The plan itself, however accurate it turns out, is less important than spending time on the act of planning.”</summary></entry><entry><title type="html">The manager’s path - 4</title><link href="https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/04/08/the-manager-path-4.html" rel="alternate" type="text/html" title="The manager’s path - 4" /><published>2022-04-08T00:00:00-05:00</published><updated>2022-04-08T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/04/08/the-manager-path-4</id><author><name></name></author><category term="management" /><category term="leadership" /><category term="reading_notes" /><summary type="html">“It can be hard to balance the work of project management and oversight with hands-on technical delivery. Some days you’re on a maker’s schedule, and some days you’re on a manager’s schedule. Through trial and error, you’ll need to learn how to manage your time to provide yourself with appropriately sized blocks to work in. The worst scheduling mistake is allowing yourself to get pulled randomly into meetings. It is very difficult to get into the groove of writing code if you’re interrupted every hour by a meeting.”</summary></entry><entry><title type="html">The manager’s path - 3</title><link href="https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/04/03/the-manager-path-3.html" rel="alternate" type="text/html" title="The manager’s path - 3" /><published>2022-04-03T00:00:00-05:00</published><updated>2022-04-03T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/04/03/the-manager-path-3</id><author><name></name></author><category term="management" /><category term="leadership" /><category term="reading_notes" /><summary type="html">“The tech lead role is not a point on the ladder, but a set of responsibilities that any engineer may take on once they reach the senior level. This role may or may not include people management, but if it does, the tech lead is expected to manage these team members to the high management standards of RTR tech. These standards include: Regular (weekly) 1-1 touchbases Regular feedback on career growth, progression towards goals, areas for improvement, and praise as warranted Working with reports to identify areas for learning and helping them grow in these areas via project work, external learning, or additional mentoring If a tech lead is not managing directly, they are still expected to provide mentorship and guidance to the other members of the team. The tech lead is learning how to be a strong technical project manager, and as such, they are scaling themselves by delegating work effectively without micromanaging. They focus on the whole team’s productivity and strive to increase the impact of the team’s work product. They are empowered to make independent decisions for the team and are learning how to handle difficult management and leadership situations. They are also learning how to partner effectively with product, analytics, and other areas of the business. It is not required that an engineer work as a tech lead to progress, but it is the most common way for engineers to grow from senior engineer 1 -&amp;gt; 2 and is required to grow from senior engineer 2 to engineering lead. Realistically it is very hard to grow past senior engineer 2 without ever having acted as a tech lead, even on the individual contributor track, due to the importance at senior levels of leadership and responsibility.”</summary></entry><entry><title type="html">The manager’s path - 2</title><link href="https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/04/03/the-manager-path-2.html" rel="alternate" type="text/html" title="The manager’s path - 2" /><published>2022-04-03T00:00:00-05:00</published><updated>2022-04-03T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/04/03/the-manager-path-2</id><author><name></name></author><category term="management" /><category term="leadership" /><category term="reading_notes" /><summary type="html">“Whatever the source of the mentoring arrangement, common mentoring pitfalls include viewing it as a low-status “emotional labor” position, assuming that “like” must mentor “like,” and failing to use the opportunity to observe potential on your team firsthand. Emotional labor is a way to think about traditionally feminine “soft skills”—that is, skills that address the emotional needs of people and teams. Because the outcome can be hard to quantitatively measure, emotional labor is often dismissed as less important work than writing software. It’s assumed to be something that should just be provided without financial recognition. I’m not suggesting that you should pay people extra money to serve as mentors, but they need to be recognized for the work they put in, and the mentor should be treated as a first-class citizen with respect to other responsibilities the person might have. As I said before, plan for it, and provide the mentor the time to do the job right. You have already invested in creating this mentoring relationship, whether it’s the thousands of dollars and many hours spent on hiring, or the overhead and coordination of creating a mentoring program. It’s worth continuing the investment through to[…]”</summary></entry></feed>