<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://taihangye.github.io/evolve-or-die/feed.xml" rel="self" type="application/atom+xml" /><link href="https://taihangye.github.io/evolve-or-die/" rel="alternate" type="text/html" /><updated>2022-06-24T00:45:40-05:00</updated><id>https://taihangye.github.io/evolve-or-die/feed.xml</id><title type="html">Evolve or Die</title><subtitle>Mainly about technology, management, ideas</subtitle><entry><title type="html">Radical Candor - 14</title><link href="https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/06/23/radical-candor-14.html" rel="alternate" type="text/html" title="Radical Candor - 14" /><published>2022-06-23T00:00:00-05:00</published><updated>2022-06-23T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/06/23/radical-candor-14</id><author><name></name></author><category term="management" /><category term="leadership" /><category term="reading_notes" /><summary type="html">“When run effectively, the GSD wheel will enable your team to achieve more collectively than anyone could ever dream of achieving individually—to burst the bounds of your brain. First, you have to listen to the ideas that people on your team have and create a culture in which they listen to each other. Next, you have create space in which ideas can be sharpened and clarified , to make sure these ideas don’t get crushed before everyone fully understands their potential usefulness. But just because an idea is easy to understand doesn’t mean it’s a good one. Next, you have to debate ideas and test them more rigorously. Then you need to decide —quickly, but not too quickly. Since not everyone will have been involved in the listen-clarify-debate-decide part of the cycle for every idea, the next step is to bring the broader team along. You have to persuade those who weren’t involved in a decision that it was a good one, so that everyone can execute it effectively. Then, having executed , you have to learn from the results, whether or not you did the right thing, and start the whole process over again. ”</summary></entry><entry><title type="html">Radical Candor - 9</title><link href="https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/06/10/radical-candor-9.html" rel="alternate" type="text/html" title="Radical Candor - 9" /><published>2022-06-10T00:00:00-05:00</published><updated>2022-06-10T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/06/10/radical-candor-9</id><author><name></name></author><category term="management" /><category term="leadership" /><category term="reading_notes" /><summary type="html">“Scott proposed using the word “growth” instead of “potential,” to help managers think about what opportunities to give to which people on their teams. Changing one word made a world of difference. Instead of asking an implicitly judgmental question like, “Is this a person with high or low potential?” we encouraged managers to ask themselves questions like, “What growth trajectory does each person on my team want to be on right now?” or “Have I given everybody opportunities that are in line with what they really want?” or “What growth trajectory do my direct reports believe they are on? Do I agree? And if I don’t, why don’t I?” Sometimes people really want to grow and are capable of contributing more than they have been allowed to; at other times, they simply want more money or recognition but don’t really want to change the way they work or contribute any more than they do already. As the boss, you’re the one who’s going to have to know your direct reports well enough to make these distinctions and then have some Radically Candid conversations when you see things differently.”</summary></entry><entry><title type="html">Radical Candor - 8</title><link href="https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/06/10/radical-candor-8.html" rel="alternate" type="text/html" title="Radical Candor - 8" /><published>2022-06-10T00:00:00-05:00</published><updated>2022-06-10T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/06/10/radical-candor-8</id><author><name></name></author><category term="management" /><category term="leadership" /><category term="reading_notes" /><summary type="html">“Karen Sipprell, a colleague at Apple, asked two questions that were instructive: “How long do you spend making sure you have all the facts right before you criticize somebody? How long do you spend making sure you have all the facts right before you praise somebody?” Ideally you’d spend just as long getting the facts right for praise as for criticism.”</summary></entry><entry><title type="html">Radical Candor - 13</title><link href="https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/06/10/radical-candor-13.html" rel="alternate" type="text/html" title="Radical Candor - 13" /><published>2022-06-10T00:00:00-05:00</published><updated>2022-06-10T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/06/10/radical-candor-13</id><author><name></name></author><category term="management" /><category term="leadership" /><category term="reading_notes" /><summary type="html">“Telling people what to do didn’t work. At a time when we were obviously in need of big changes, it had seemed like it was the fastest way forward, but it wasn’t. First, because I didn’t involve my team in decision-making; I just made the decisions myself. Second, because even after making them I didn’t take the time to explain why or to persuade the team I’d made good decisions. So, instead of executing on decisions they didn’t agree with or even understand, my team dissolved, and I wasn’t going to improve our results until I rebuilt it.”</summary></entry><entry><title type="html">Radical Candor - 12</title><link href="https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/06/10/radical-candor-12.html" rel="alternate" type="text/html" title="Radical Candor - 12" /><published>2022-06-10T00:00:00-05:00</published><updated>2022-06-10T00:00:00-05:00</updated><id>https://taihangye.github.io/evolve-or-die/management/leadership/reading_notes/2022/06/10/radical-candor-12</id><author><name></name></author><category term="management" /><category term="leadership" /><category term="reading_notes" /><summary type="html">“It will get better. But of course it won’t get better all by itself. So stop and ask yourself: how , exactly, will it get better? What are you going to do differently? What will the person in question do differently? How might circumstances change? Even if things have gotten a little better, have they improved enough? If you don’t have a pretty precise answer to those questions, it probably won’t get better. Somebody is better than nobody . Another common reason why bosses are reluctant to fire a poor performer is that they don’t want a “hole” on the team. If you fire “Jeffrey,” who will do the work he was doing? How long will it take you to find a replacement? The fact is that poor performers often create as much extra work for others as they accomplish themselves, because they leave parts of their job undone or do other parts sloppily or behave unprofessionally in ways that others must compensate for. Steve Jobs put it succinctly, if harshly, when he said, “It’s better to have a hole than an asshole.” A transfer is the answer. Because firing people is so very hard, it’s often tempting to instead pass them off to an unsuspecting colleague at your company, even if they don’t have skills your colleague needs or are a poor cultural fit. It feels “nicer” than firing them. This is obviously not so nice for the unsuspecting colleague and is generally a mistake for the person you’re trying to be “nice” to as well. It’s bad for morale. It’s also tempting to tell yourself that you’re not firing somebody because doing so would discourage the team. But keeping someone on who can’t do the job is far worse for morale—yours, the person who’s doing a crummy job, and everyone else who’s doing a great job. Again, this comes down to having built a good relationship with the person you’re firing, and the rest of the team. It comes back to having demonstrated that you care personally.”</summary></entry></feed>